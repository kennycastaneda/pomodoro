{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\pomodoro\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport ChangeDuration from \"./ChangeDuration\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport PlayPauseStop from \"./PlayPauseStop\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); //durationMinutes function changes string to number to add minutes when changing durations\n\n  function durationMinutes(durationString) {\n    let minutes = durationString.slice(0, 2);\n    minutes = parseInt(minutes);\n    return minutes;\n  } //Set up focusDuration value to 25 minutes and set up function when buttons are clicked for changing focus duration\n\n\n  const [focusDuration, setFocusDuration] = useState(minutesToDuration(25));\n\n  const focusDurationChange = ({\n    target\n  }) => {\n    //switch setup for duration changes and limits on times\n    switch (true) {\n      case focusDuration === \"05:00\" && target.id === \"Minus\":\n        console.log(\"Cannot set focus time to zero\");\n        break;\n\n      case focusDuration === \"60:00\" && target.id === \"Plus\":\n        console.log(\"Cannot set focus time greater than 60\");\n        break;\n\n      case target.id === \"Plus\":\n        setFocusDuration(focusDuration => minutesToDuration(durationMinutes(focusDuration) + 5));\n        break;\n\n      case target.id === \"Minus\":\n        setFocusDuration(focusDuration => minutesToDuration(durationMinutes(focusDuration) - 5));\n        break;\n\n      default:\n        setFocusDuration(minutesToDuration(25));\n    }\n  }; //Set up brakDuration value to 5 minutes and set up function when buttons are clicked for changing break duration\n\n\n  const [breakDuration, setBreakDuration] = useState(minutesToDuration(5));\n\n  const breakDurationChange = ({\n    target\n  }) => {\n    //console.log(target.id);\n    switch (true) {\n      case breakDuration === \"01:00\" && target.id === \"Minus\":\n        console.log(\"Cannot set break time to zero\");\n        break;\n\n      case breakDuration === \"15:00\" && target.id === \"Plus\":\n        console.log(\"Cannot set break time greater than 15\");\n        break;\n\n      case target.id === \"Plus\":\n        console.log(durationMinutes(breakDuration));\n        setBreakDuration(breakDuration => minutesToDuration(durationMinutes(breakDuration) + 1));\n        break;\n\n      case target.id === \"Minus\":\n        setBreakDuration(breakDuration => minutesToDuration(durationMinutes(breakDuration) - 1));\n        break;\n\n      default:\n        setBreakDuration(minutesToDuration(5));\n    }\n  };\n\n  useInterval(() => {// ToDo: Implement what should happen when the timer is running\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stopped() {\n    setFocusSuration(minutesToDuration(25));\n    setBreakDuration(minutesToDuration(5));\n    setIsTimerRunning(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", focusDuration), /*#__PURE__*/React.createElement(ChangeDuration, {\n    handleDurationChange: focusDurationChange,\n    timerRunning: isTimerRunning,\n    dataTestId: \"focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", breakDuration), /*#__PURE__*/React.createElement(ChangeDuration, {\n    handleDurationChange: breakDurationChange,\n    timerRunning: isTimerRunning,\n    dataTestId: \"break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(PlayPauseStop, {\n    isTimerRunning: isTimerRunning,\n    handlePlayPause: playPause,\n    handleStop: stopped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Focusing for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"25:00 remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","ChangeDuration","minutesToDuration","PlayPauseStop","Pomodoro","isTimerRunning","setIsTimerRunning","durationMinutes","durationString","minutes","slice","parseInt","focusDuration","setFocusDuration","focusDurationChange","target","id","console","log","breakDuration","setBreakDuration","breakDurationChange","playPause","prevState","stopped","setFocusSuration","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD,CAFkB,CAIlB;;AACA,WAASQ,eAAT,CAAyBC,cAAzB,EAAyC;AACvC,QAAIC,OAAO,GAAGD,cAAc,CAACE,KAAf,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AACAD,IAAAA,OAAO,GAAGE,QAAQ,CAACF,OAAD,CAAlB;AACA,WAAOA,OAAP;AACD,GATiB,CAWlB;;;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAACG,iBAAiB,CAAC,EAAD,CAAlB,CAAlD;;AACA,QAAMY,mBAAmB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC1C;AACA,YAAQ,IAAR;AACE,WAAKH,aAAa,KAAK,OAAlB,IAA6BG,MAAM,CAACC,EAAP,KAAc,OAAhD;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA;;AACF,WAAKN,aAAa,KAAK,OAAlB,IAA6BG,MAAM,CAACC,EAAP,KAAc,MAAhD;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA;;AACF,WAAKH,MAAM,CAACC,EAAP,KAAc,MAAnB;AACEH,QAAAA,gBAAgB,CAAED,aAAD,IACfV,iBAAiB,CAACK,eAAe,CAACK,aAAD,CAAf,GAAiC,CAAlC,CADH,CAAhB;AAGA;;AACF,WAAKG,MAAM,CAACC,EAAP,KAAc,OAAnB;AACEH,QAAAA,gBAAgB,CAAED,aAAD,IACfV,iBAAiB,CAACK,eAAe,CAACK,aAAD,CAAf,GAAiC,CAAlC,CADH,CAAhB;AAGA;;AACF;AACEC,QAAAA,gBAAgB,CAACX,iBAAiB,CAAC,EAAD,CAAlB,CAAhB;AAlBJ;AAoBD,GAtBD,CAbkB,CAqClB;;;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAACG,iBAAiB,CAAC,CAAD,CAAlB,CAAlD;;AACA,QAAMmB,mBAAmB,GAAG,CAAC;AAAEN,IAAAA;AAAF,GAAD,KAAgB;AAC1C;AACA,YAAQ,IAAR;AACE,WAAKI,aAAa,KAAK,OAAlB,IAA6BJ,MAAM,CAACC,EAAP,KAAc,OAAhD;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA;;AACF,WAAKC,aAAa,KAAK,OAAlB,IAA6BJ,MAAM,CAACC,EAAP,KAAc,MAAhD;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA;;AACF,WAAKH,MAAM,CAACC,EAAP,KAAc,MAAnB;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYX,eAAe,CAACY,aAAD,CAA3B;AACAC,QAAAA,gBAAgB,CAAED,aAAD,IACfjB,iBAAiB,CAACK,eAAe,CAACY,aAAD,CAAf,GAAiC,CAAlC,CADH,CAAhB;AAGA;;AACF,WAAKJ,MAAM,CAACC,EAAP,KAAc,OAAnB;AACEI,QAAAA,gBAAgB,CAAED,aAAD,IACfjB,iBAAiB,CAACK,eAAe,CAACY,aAAD,CAAf,GAAiC,CAAlC,CADH,CAAhB;AAGA;;AACF;AACEC,QAAAA,gBAAgB,CAAClB,iBAAiB,CAAC,CAAD,CAAlB,CAAhB;AAnBJ;AAqBD,GAvBD;;AAyBAF,EAAAA,WAAW,CACT,MAAM,CACJ;AACD,GAHQ,EAITK,cAAc,GAAG,IAAH,GAAU,IAJf,CAAX;;AAOA,WAASiB,SAAT,GAAqB;AACnBhB,IAAAA,iBAAiB,CAAEiB,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,WAASC,OAAT,GAAmB;AACjBC,IAAAA,gBAAgB,CAACvB,iBAAiB,CAAC,EAAD,CAAlB,CAAhB;AACAkB,IAAAA,gBAAgB,CAAClB,iBAAiB,CAAC,CAAD,CAAlB,CAAhB;AACAI,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBM,aAFnB,CADF,eAKE,oBAAC,cAAD;AACE,IAAA,oBAAoB,EAAEE,mBADxB;AAEE,IAAA,YAAY,EAAET,cAFhB;AAGE,IAAA,UAAU,EAAC,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBc,aAFnB,CADF,eAKE,oBAAC,cAAD;AACE,IAAA,oBAAoB,EAAEE,mBADxB;AAEE,IAAA,YAAY,EAAEhB,cAFhB;AAGE,IAAA,UAAU,EAAC,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,CAdF,CADF,eA+BE,oBAAC,aAAD;AACE,IAAA,cAAc,EAAEA,cADlB;AAEE,IAAA,eAAe,EAAEiB,SAFnB;AAGE,IAAA,UAAU,EAAEE,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,eAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CADF,CAFF,eAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KANT,CAM0B;AAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAZF,CApCF,CADF;AAkED;;AAED,eAAevB,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport ChangeDuration from \"./ChangeDuration\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport PlayPauseStop from \"./PlayPauseStop\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  //durationMinutes function changes string to number to add minutes when changing durations\n  function durationMinutes(durationString) {\n    let minutes = durationString.slice(0, 2);\n    minutes = parseInt(minutes);\n    return minutes;\n  }\n\n  //Set up focusDuration value to 25 minutes and set up function when buttons are clicked for changing focus duration\n  const [focusDuration, setFocusDuration] = useState(minutesToDuration(25));\n  const focusDurationChange = ({ target }) => {\n    //switch setup for duration changes and limits on times\n    switch (true) {\n      case focusDuration === \"05:00\" && target.id === \"Minus\":\n        console.log(\"Cannot set focus time to zero\");\n        break;\n      case focusDuration === \"60:00\" && target.id === \"Plus\":\n        console.log(\"Cannot set focus time greater than 60\");\n        break;\n      case target.id === \"Plus\":\n        setFocusDuration((focusDuration) =>\n          minutesToDuration(durationMinutes(focusDuration) + 5)\n        );\n        break;\n      case target.id === \"Minus\":\n        setFocusDuration((focusDuration) =>\n          minutesToDuration(durationMinutes(focusDuration) - 5)\n        );\n        break;\n      default:\n        setFocusDuration(minutesToDuration(25));\n    }\n  };\n\n  //Set up brakDuration value to 5 minutes and set up function when buttons are clicked for changing break duration\n  const [breakDuration, setBreakDuration] = useState(minutesToDuration(5));\n  const breakDurationChange = ({ target }) => {\n    //console.log(target.id);\n    switch (true) {\n      case breakDuration === \"01:00\" && target.id === \"Minus\":\n        console.log(\"Cannot set break time to zero\");\n        break;\n      case breakDuration === \"15:00\" && target.id === \"Plus\":\n        console.log(\"Cannot set break time greater than 15\");\n        break;\n      case target.id === \"Plus\":\n        console.log(durationMinutes(breakDuration));\n        setBreakDuration((breakDuration) =>\n          minutesToDuration(durationMinutes(breakDuration) + 1)\n        );\n        break;\n      case target.id === \"Minus\":\n        setBreakDuration((breakDuration) =>\n          minutesToDuration(durationMinutes(breakDuration) - 1)\n        );\n        break;\n      default:\n        setBreakDuration(minutesToDuration(5));\n    }\n  };\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stopped() {\n    setFocusSuration(minutesToDuration(25));\n    setBreakDuration(minutesToDuration(5));\n    setIsTimerRunning(false);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {focusDuration}\n            </span>\n            <ChangeDuration\n              handleDurationChange={focusDurationChange}\n              timerRunning={isTimerRunning}\n              dataTestId=\"focus\"\n            />\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {breakDuration}\n              </span>\n              <ChangeDuration\n                handleDurationChange={breakDurationChange}\n                timerRunning={isTimerRunning}\n                dataTestId=\"break\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <PlayPauseStop\n        isTimerRunning={isTimerRunning}\n        handlePlayPause={playPause}\n        handleStop={stopped}\n      />\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">Focusing for 25:00 minutes</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              25:00 remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}